name: CI - Lighthouse CI

on:
  pull_request:
    branches:
      - lighthouse-CI
      - main

jobs:
  lhci:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max-old-space-size=8192
      GATSBY_CONCURRENT_DOWNLOAD: 1

    steps:
      - name: Extract and build URLs from PR body paths
        id: extract
        shell: bash
        env:
          PR_BODY: ${{ github.event.pull_request.body || '' }}
        run: |
          echo "$PR_BODY" > pr_body.txt
          # Find strings that start with a '/' to identify them as paths.
          PATHS=$(grep -Eo '^/[a-zA-Z0-9/_.-]*$' pr_body.txt || true)

          if [ -z "$PATHS" ]; then
            echo "has_urls=false" >> $GITHUB_OUTPUT
            echo "has_localhost=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          readarray -t PATH_ARRAY <<< "$PATHS"
          ARGS=""
          for path in "${PATH_ARRAY[@]}"; do
            clean_path=$(echo "$path" | sed 's/[),.;:]*$//')
            full_url="http://localhost:9000$clean_path"
            ARGS="$ARGS --collect.url='$full_url'"
          done

          echo "ARGS=$ARGS" >> $GITHUB_ENV
          echo "has_urls=true" >> $GITHUB_OUTPUT
          echo "has_localhost=true" >> $GITHUB_OUTPUT

      - name: Checkout code (only if localhost URLs provided)
        if: steps.extract.outputs.has_localhost == 'true'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: npm install & build (only for localhost URLs)
        if: steps.extract.outputs.has_localhost == 'true'
        run: |
          rm -rf .cache public
          npm ci
          npm run build

      - name: Start static server (only for localhost URLs)
        if: steps.extract.outputs.has_localhost == 'true'
        shell: bash
        run: |
          npx http-server ./public -p 9000 --silent &
          TIMEOUT=60
          COUNT=0
          until curl -sSf http://localhost:9000/ >/dev/null; do
            sleep 1
            COUNT=$((COUNT+1))
            if [ $COUNT -ge $TIMEOUT ]; then
              echo "Server did not start within timeout"
              exit 1
            fi
          done
          echo "Local server ready"
      
      - name: Run Lighthouse CI for supplied URLs
        if: steps.extract.outputs.has_urls == 'true'
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npm install -g @lhci/cli@0.15.x
          if [ -z "${ARGS}" ]; then
            echo "No URLs provided. Skipping LHCI."
            exit 0
          fi
          echo "Running LHCI autorun with URLs: $ARGS"
          lhci autorun $ARGS